package org.nsu.fit.tests.api;

import io.qameta.allure.Feature;
import io.qameta.allure.Severity;
import io.qameta.allure.SeverityLevel;
import org.nsu.fit.services.rest.RestClient;
import org.nsu.fit.services.rest.data.AccountTokenPojo;
import org.nsu.fit.services.rest.data.PlanPojo;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class CreatePlanTest {
    private static AccountTokenPojo adminToken;

    private PlanPojo planPojo;

    @BeforeClass
    public static void before() {
        adminToken = new RestClient().authenticate("admin", "setup");
    }

    @Test(description = "Create plan.")
    @Severity(SeverityLevel.BLOCKER)
    @Feature("Create plan feature.")
    public void createPlanTest() {
        planPojo = new RestClient().createAutoGeneratedPlan(adminToken);
    }

    @Test(description = "Get plans after create.", dependsOnMethods = "createPlanTest")
    @Severity(SeverityLevel.BLOCKER)
    @Feature("Create plan feature.")
    public void getPlansAfterCreateTest() {
        Assert.assertTrue(new RestClient().getPlans(adminToken).stream().anyMatch(plan -> planPojo.equals(plan)));
    }

    @Test(description = "Delete plans.", dependsOnMethods = "getPlansAfterCreateTest")
    @Severity(SeverityLevel.BLOCKER)
    @Feature("Plan feature.")
    public void deletePlansTest() {
        new RestClient().deletePlan(adminToken, planPojo.id);
    }


    @Test(description = "Get plans after delete.", dependsOnMethods = "deletePlansTest")
    @Severity(SeverityLevel.BLOCKER)
    @Feature("Plan feature.")
    public void getPlansAfterDeleteTest() {
        Assert.assertTrue(new RestClient().getPlans(adminToken).stream().noneMatch(plan -> planPojo.equals(plan)));
    }
}
