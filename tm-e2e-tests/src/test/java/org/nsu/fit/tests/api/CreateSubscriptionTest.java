package org.nsu.fit.tests.api;

import io.qameta.allure.Feature;
import io.qameta.allure.Severity;
import io.qameta.allure.SeverityLevel;
import org.nsu.fit.services.rest.RestClient;
import org.nsu.fit.services.rest.data.AccountTokenPojo;
import org.nsu.fit.services.rest.data.CustomerPojo;
import org.nsu.fit.services.rest.data.PlanPojo;
import org.nsu.fit.services.rest.data.SubscriptionPojo;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class CreateSubscriptionTest {
    private static AccountTokenPojo adminToken;
    private static AccountTokenPojo customerToken;
    private static PlanPojo planPojo;
    private static CustomerPojo customerPojo;

    private SubscriptionPojo subscriptionPojo;

    @BeforeClass
    public static void before() {
        adminToken = new RestClient().authenticate("admin", "setup");
        customerPojo = new RestClient().createAutoGeneratedCustomer(adminToken);
        planPojo = new RestClient().createAutoGeneratedPlan(adminToken);
        customerToken = new RestClient().authenticate(customerPojo.login, customerPojo.pass);
    }

    @Test(description = "Create subscription.")
    @Severity(SeverityLevel.BLOCKER)
    @Feature("Create subscription feature.")
    public void createSubscriptionTest() {
        subscriptionPojo = new RestClient().createSubscription(customerToken, customerPojo.id, planPojo);
    }


    @Test(description = "Get subscriptions after create.", dependsOnMethods = "createSubscriptionTest")
    @Severity(SeverityLevel.BLOCKER)
    @Feature("Create subscription feature.")
    public void getSubscriptionsAfterCreateTest() {
        Assert.assertTrue(new RestClient().getSubscriptions(adminToken).stream()
                .anyMatch(subscription -> subscriptionPojo.equals(subscription)));
    }
}
